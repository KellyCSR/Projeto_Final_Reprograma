controllers - clausulado
const mongoose = require('mongoose')
const Clausula = require('../models/clausula')

const getAll = async (req, res) => {
  const clausulas = await Clausula.find()
  res.status(200).json(clausulas)
}

const findByIdClausula = async (req, res) => {
  try{

    const  idRequerido = req.params.id

    const clausula = await Clausula.findById(idRequerido)
    if (clausula == null){
      return res.status(404).json({message: "Clausula  não encontrada"})
    }
    res.status(200).json({clausula})
}catch (err){
  res.status(400).json({ message: err.message})
}
}


const createClausula = async (req, res) => {
  const clausula = new Clausula({
    _id: new mongoose.Types.ObjectId(),
    nome: req.body.nome,
    contrato: req.body.contrato,
    criadaEm: req.body.criadaEm,
  })
  const clausulaJaExiste = await Clausula.findOne({nome: req.body.nome})
  if (clausulaJaExiste) {
    return res.status(409).json({error: 'Clausula ja cadastrada.'})
  }
  try{
    const novaClausula = await clausula.save()
    res.status(201).json(novaClausula)
  } catch(err) {
    res.status(400).json({ message: err.message})
  }
}

const updateOne = async (req, res) => {
  try{
    const clausula = await Clausula.findById(req.params.id)
    if (clausula == null){
      return res.status(404).json({message: "A clausula não foi encontrada"})
    }

    if (req.body.nome != null){
      clausula.nome = req.body.nome
    }

    const clausulaAtualizada = await clausula.save()
    res.status(200).json({clausulaAtualizada})

  }catch (err){
    res.status(500).json({message: err.message})
  }
}

const removeOneClausula = async (req, res) => {
  try{
    const clausula = await Clausula.findById(req.params.id)
    if (clausula == null){
      return res.status(404).json({message: "A clausula não foi encontrada"})
    }
    clausula.remove()
    res.status(200).json({"mensagem":"Clausula removida"})

  }catch (err){
    res.status(500).json({message: err.message})
  }
}



module.exports = {
  getAll,
  findByIdClausula,
  createClausula,
  removeOneClausula,
  updateOne
}

// controller - contrato

const mongoose = require('mongoose')
const Contrato = require('../models/contrato')

const getAll = async (req, res) => {
  const contratos = await Contrato.find().populate('clausula')
  res.status(200).json(contratos)
}

const findByIdContrato = async (req, res) => {
  try{

    const  idRequerido = req.params.id

    const contrato = await Contrato.findById(idRequerido)
    
    if (contrato == null){
      return res.status(404).json({message: "contrato  não encontrado"})
    }
    res.status(200).json({contrato})
}catch (err){
  res.status(400).json({ message: err.message})
}
}
///titulos/marvel"** Deverá retornar todos os títulos com o estudio Marvel
const getAllLocacao = async (req, res) => {
  const contratos = await Contrato.find().populate('clausula')
  const contratosFiltrados = contratos.filter(contrato => contrato.clausula.nome = "Locacao")
  res.json(contratosFiltrados)
}

////titulos/ghibli"** Deverá retornar todos os títulos com o estudio Ghibli
const getAllLGPD = async (req, res) => {
  const contratos = await Contrato.find().populate('clausula')
  const contratosFiltrados = contratos.filter(contrato => contrato.clausula.nome = "LGPD")
  res.json(contratosFiltrados)
}

 ///titulos/pixar"** Deverá retornar todos os títulos com o estudio Pixar
const getAllPreço = async (req, res) =>{
  const contratos = await Contrato.find().populate('clausula')
  const contratosFiltrados = contratos.filter(contrato => contrato.clausula.nome == "Preço")
  res.json(contratosFiltrados)
  }

const createContrato = async (req, res) => {
  const contrato = new Contrato({
    _id: new mongoose.Types.ObjectId(),
    nome: req.body.nome,
    descricao: req.body.descricao,
    clausula: req.body.clausula,
    criadoEm: req.body.criadoEm
  })
  //TODO : criar validação se filme já existe
  const contratoJaExiste = await Contrato.findOne({nome: req.body.nome})
  if (contratoJaExiste) {
    return res.status(409).json({error: 'Contrato ja cadastrado.'})
  }
  try {
    const novoContrato = await contrato.save()
    res.status(201).json(novoContrato)
  } catch (err) {
    res.status(400).json({ message: err.message})
  }
}

const updateOneContrato = async (req, res) => {
  try{
    const contrato = await Contrato.findById(req.params.id)
    if (contrato == null){
      return res.status(404).json({message: "Contrato  não encontrado"})
    }

    if (req.body.descricao != null){
      contrato.descricao = req.body.descricao
    }

    const contratoAtualizado = await contrato.save()
    res.status(200).json({contratoAtualizado})

  }catch (err){
    res.status(500).json({message: err.message})
  }
}

const updateAnythingContrato = async (req, res) => {
  try{
    const contrato = await Contrato.findById(req.params.id)
    if (contrato == null){
      return res.status(404).json({message: "Contrato não encontrado"})
    }
    const updatedContrato = req.body

    if (updatedContrato != null){

      let keyList = Object.keys(updatedContrato)
      keyList.forEach((conteudo) => {
        console.log('chave', conteudo);
        contrato[conteudo] = updatedContrato[conteudo];
    });
    
    }
    const contratoAtualizado = await contrato.save()
    res.status(200).json({contratoAtualizado})


  }
  catch (err){
    res.status(500).json({message: err.message})
  }
}

const removeOneContrato = async (req, res) => {
  try{
    const contrato = await Contrato.findById(req.params.id)
    if (contrato == null){
      return res.status(404).json({message: "Contrato  não encontrado"})
    }
    contrato.remove()
    res.status(200).json({"mensagem":"Contrato removido com sucesso"})

  }catch (err){
    res.status(500).json({message: err.message})
  }
}



module.exports = {  getAll,  getAllLocacao,  getAllLGPD,  getAllPreço,  updateOneContrato,  updateAnythingContrato,  removeOneContrato,
  findByIdContrato,
  createContrato

}


Routes - Clausula
const express = require('express')
const router = express.Router()
const controller = require('../controllers/clausulaController')

router.get("/oi", (req, resp)=>{
        resp.status(200).send({"mensagem":"oi to aqui ta funcionando "})
    })

//listar todas as clausulas/get/find
router.get('/', controller.getAll)

//criar uma nova clausula/post/save
router.post('/', controller.createClausula)

//listar uma clausula/get/findById
router.get('/:id', controller.findByIdClausula)

//atualizar uma informacao especifica numa clausula/patch/findById/save
router.patch('/:id', controller.updateOne)

//deletar uma clausula/delete/findById/remove
router.delete('/:id', controller.removeOneClausula)

module.exports = router

***** Router - Contrato

const express = require('express')
const router = express.Router()
const controller = require('../controllers/contratoController')

router.get("/oi", (req, resp)=>{
        resp.status(200).send({"mensagem":"oi to aqui ta funcionando "})
    })

//listar todos os contratos/get/find

router.get('/pixar', controller.getAllLocacao)
router.get('/marvel', controller.getAllLGPD)
router.get('/ghibli', controller.getAllPreço)
router.get('/', controller.getAll)

//criar um novo contrato/post/save
router.post('/', controller.createContrato)

//listar um contrato/get/findById
router.get('/:id', controller.findByIdContrato)

//atualizar uma informacao especifica num contrato/patch/findById/save
router.patch('/:id', controller.updateOneContrato)
router.patch('/anything/:id', controller.updateAnythingContrato)

//deletar um contrato/delete/findById/remove
router.delete('/:id', controller.removeOneContrato)

module.exports = router

